This file describes interfaces present in base and devices modules.
Although the idea is to make the interfaces as language-independent
as possible, a 'loose' implementation in a simple language is good
to see how things can be structured. 
Python doesn't have a interface type (like java or go), but it
can be simulated via classes.

BASE CLASSES (INTERFACES)
These interfaces are intended to be the low-level basis of the rest
of the whole system.

class 'Gadget' [inherits from <class 'object'>]:
	all gadgets should inherit this.
	method 'model_name':
		returns: <class 'str'>
		description: returns the device's model name.
	method 'supports':
		inputs: platform(<class 'str'>)
		returns: <class 'bool'>
		description: returns true if the gadget is designed for some platform or false if not

class 'InputGadget' [inherits from <class 'base.Gadget'>]:
	any gadget that gets some signal from the outside world should inherit this.

class 'OutputGadget' [inherits from <class 'base.Gadget'>]:
	any gadget that produces some signal to the outside world should inherit this.

class 'ScalarSensor' [inherits from <class 'base.InputGadget'>]:
	any gadget which value of interest is a physical scalar quantity should inherit this.
	method 'value':
		returns: <class 'float'>
		description: returns the intensity of the quantity measured by the device.

class 'VectorSensor' [inherits from <class 'base.InputGadget'>]:
	any gadget which value of interest is a physical vector quantity should inherit this.
	method 'value_x':
		returns: <class 'float'>
		description: returns the intensity of the quantity measured by the device on the x axis.
	method 'value_y':
		returns: <class 'float'>
		description: returns the intensity of the quantity measured by the device on the y axis.
	method 'value_z':
		returns: <class 'float'>
		description: returns the intensity of the quantity measured by the device on the z axis.

class 'Receiver' [inherits from <class 'base.InputGadget'>]:
	any gadget which value of interest is a signal from another gadget 
       should inherit this.

class 'Transmitter' [inherits from <class 'base.OutputGadget'>]:
	any gadget which sends a signal to another gadget should inherit this.

SOME DEVICES CLASSES (INTERFACES)
These interfaces define the devices, their services and behavior.

class 'Motor' [inherits from <class 'base.OutputGadget'>]:
	interface that represents motors.
	method 'move':
		inputs: intensity(<class 'float'>)
		returns: None
		description: moves the motor with the speed defined by intensity.
           intensity is a value between [-1,1], whereas -1 is the maximum speed
           in reverse direction and 1 is the maximum speed in normal direction.

class 'LightSource' [inherits from <class 'base.OutputGadget'>]:
	interface that represents some light source.
	method 'lighten':
		inputs: intensity(<class 'float'>)
		returns: None
		description: produces light via the sensor with luminosity defined by intensity.
           intensity is a value between [0,1], whereas 0 is the mininum possible 
           luminosity and 1 is the maximum possible luminosity.

class 'Button' [inherits from <class 'base.InputGadget'>]:
	interface that represents a simple button.
	method 'pressed':
		returns: <class 'bool'>
		description: returns True if the button is/was held down and False otherwise.

class 'FlameThrower' [inherits from <class 'base.OutputGadget'>]:
	interface that represents flamethrower devices.
	method 'fire':
		inputs: intensity(<class 'float'>)
		returns: None
		description: sends flaming death to the world.
           intensity is a value between [0,1], whereas 0 is the mininum possible
           fire intensity and 1 is the maximum.

class 'DistanceSensor' [inherits from <class 'base.ScalarSensor'>]:
	interface that represents distance sensors. it may be an ultrassonic or infrared one,
       for example.
	method 'value':
		returns: <class 'float'>
		description: returns the distance from the sensor in meters. the return value must be 
           greater or equal to zero.

class 'LuminositySensor' [inherits from <class 'base.ScalarSensor'>]:
	interface that represents a light sensor.
	method 'value':
		returns: <class 'float'>
		description: gets the luminosity read by the sensor. the return value must be between [0,1], 
           whereas 0 is the mininum luminosity possibly readable by the sensor 
           and 1 is the maximum.

class 'GPS' [inherits from <class 'base.Receiver'>]:
	interface that represents a GPS receiver device.
	method 'get_nmea_message':
		returns: <class 'str'>
		description: gets a standard NMEA message from device.

